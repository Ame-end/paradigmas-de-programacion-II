/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paqueteEjercicio3;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;

/**
 *
 * @author Ameli
 */
public class Juego extends javax.swing.JFrame {

    /**
     * Creates new form Juego
     */
    public Juego() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        nombre = new javax.swing.JLabel();
        fecha = new javax.swing.JLabel();
        descripcion = new javax.swing.JLabel();
        botonPiedra = new javax.swing.JButton();
        botonPapel = new javax.swing.JButton();
        botonTijera = new javax.swing.JButton();
        pregunta = new javax.swing.JLabel();
        mostrarGanador = new javax.swing.JTextField();
        titulo = new javax.swing.JLabel();
        boton_archivo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nombre.setText("Amelia Mendoza López");

        fecha.setText("Fecha: 21/01/2025");

        descripcion.setText("Representación del juego piedra, papel y tijera");

        botonPiedra.setText("PIEDRA");
        botonPiedra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonPiedraMouseClicked(evt);
            }
        });

        botonPapel.setText("PAPEL");
        botonPapel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonPapelMouseClicked(evt);
            }
        });

        botonTijera.setText("TIJERA");
        botonTijera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonTijeraMouseClicked(evt);
            }
        });

        pregunta.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        pregunta.setForeground(new java.awt.Color(0, 153, 153));
        pregunta.setText("¿Qué elégiras?");

        titulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        titulo.setForeground(new java.awt.Color(0, 51, 153));
        titulo.setText("PIEDRA-PAPEL-TIJERA");

        boton_archivo.setText("Enviar_Archivo");
        boton_archivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boton_archivoMouseClicked(evt);
            }
        });
        boton_archivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_archivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(mostrarGanador, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(botonPiedra)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(botonPapel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(botonTijera))
                                        .addComponent(pregunta)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(250, 250, 250)
                            .addComponent(boton_archivo))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(16, 16, 16)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(nombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fecha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descripcion)
                .addGap(18, 18, 18)
                .addComponent(titulo)
                .addGap(18, 18, 18)
                .addComponent(pregunta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonPapel)
                    .addComponent(botonTijera)
                    .addComponent(botonPiedra))
                .addGap(29, 29, 29)
                .addComponent(mostrarGanador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(boton_archivo)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>                        

    private void botonPiedraMouseClicked(java.awt.event.MouseEvent evt) {                                         
        Random random = new Random();
        int aleatorioLaptop = random.nextInt(3) + 1; // 1 = Piedra, 2 = Papel, 3 = Tijera
        String opLaptop = "";

        // Asignar la opción de la computadora
        if (aleatorioLaptop == 1) {
            opLaptop = "Piedra";
        } else if (aleatorioLaptop == 2) {
            opLaptop = "Papel";
        } else if (aleatorioLaptop == 3) {
            opLaptop = "Tijera";
        }

        int usuario = 1; // Aquí el usuario ha elegido "Piedra"
        String opUsuario = "Piedra"; // Opción del usuario

        // Determinar el resultado
        String resultado = null;
        if (usuario == aleatorioLaptop) {  // Empate
             resultado = "EL jugador es " + opUsuario + " y la PC es " + opLaptop + ". EMPATE";
        } else if (aleatorioLaptop == 2) {
            resultado = "EL jugador es " + opUsuario + " y la PC es " + opLaptop + ". GANA LAPTOP";
        } else if (aleatorioLaptop == 3) {
            resultado = "EL jugador es " + opUsuario + " y la PC es " + opLaptop + ". GANA USUARIO";
        }

        // Mostrar el resultado en la interfaz
        mostrarGanador.setText("  " + resultado);
        
        //Se mandan al archivo
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("C:\\Users\\Ameli\\OneDrive\\Escritorio\\resultado.txt", true))) {
        writer.write(resultado);
        writer.newLine(); // Agregar un salto de línea
    } catch (IOException e) {
        e.printStackTrace();
    }

    }                                        

    private void botonPapelMouseClicked(java.awt.event.MouseEvent evt) {                                        
        Random random = new Random();
        int aleatorioLaptop = random.nextInt(3) + 1; // 1 = Piedra, 2 = Papel, 3 = Tijera
        String opLaptop = "";

        // Asignar la opción de la computadora
        if (aleatorioLaptop == 1) {
            opLaptop = "Piedra";
        } else if (aleatorioLaptop == 2) {
            opLaptop = "Papel";
        } else if (aleatorioLaptop == 3) {
            opLaptop = "Tijera";
        }

        int usuario = 2; // Aquí el usuario ha elegido "Papel"
        String opUsuario = "Papel"; // Opción del usuario

        // Determinar el resultado
        String resultado = null;
        if (usuario == aleatorioLaptop) {  // Empate
             resultado = "EL jugador es " + opUsuario + " y la PC es " + opLaptop + ". EMPATE";
        } else if (aleatorioLaptop == 1) {
            resultado = "EL jugador es " + opUsuario + " y la PC es " + opLaptop + ". GANA USUARIO";
        } else if (aleatorioLaptop == 3) {
            resultado = "EL jugador es " + opUsuario + " y la PC es " + opLaptop + ". GANA LAPTOP";
        }

        // Mostrar el resultado en la interfaz
        mostrarGanador.setText("  " + resultado);
        
        //Se manda al archivo
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("C:\\Users\\Ameli\\OneDrive\\Escritorio\\resultado.txt", true))) {
        writer.write(resultado);
        writer.newLine(); // Agregar un salto de línea
    } catch (IOException e) {
        e.printStackTrace();
    }
        
    }                                       

    private void botonTijeraMouseClicked(java.awt.event.MouseEvent evt) {                                         

        Random random = new Random();
        int aleatorioLaptop = random.nextInt(3) + 1; // 1 = Piedra, 2 = Papel, 3 = Tijera
        String opLaptop = "";

        // Asignar la opción de la computadora
        if (aleatorioLaptop == 1) {
            opLaptop = "Piedra";
        } else if (aleatorioLaptop == 2) {
            opLaptop = "Papel";
        } else if (aleatorioLaptop == 3) {
            opLaptop = "Tijera";
        }

        int usuario = 3; // Aquí el usuario ha elegido "Tijera"
        String opUsuario = "Tijera"; // Opción del usuario

        // Determinar el resultado
        String resultado = null;
        if (usuario == aleatorioLaptop) {  // Empate
            resultado = "EL jugador es " + opUsuario + " y la PC es " + opLaptop + ". EMPATE";
        } else if (aleatorioLaptop == 1) {
            resultado = "EL jugador es " + opUsuario + " y la PC es " + opLaptop + ". GANA LAPTOP";
        } else if (aleatorioLaptop == 2) {
            resultado = "EL jugador es " + opUsuario + " y la PC es " + opLaptop + ". GANA USUARIO";
        }

        // Mostrar el resultado en la interfaz
        mostrarGanador.setText("  " + resultado);
        
        //Se manda al archivo
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("C:\\Users\\Ameli\\OneDrive\\Escritorio\\resultado.txt", true))) {
        writer.write(resultado);
        writer.newLine(); // Agregar un salto de línea
    } catch (IOException e) {
        e.printStackTrace();
    }
    }                                        

    private void boton_archivoActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void boton_archivoMouseClicked(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
        
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Juego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton botonPapel;
    private javax.swing.JButton botonPiedra;
    private javax.swing.JButton botonTijera;
    private javax.swing.JButton boton_archivo;
    private javax.swing.JLabel descripcion;
    private javax.swing.JLabel fecha;
    private javax.swing.JTextField mostrarGanador;
    private javax.swing.JLabel nombre;
    private javax.swing.JLabel pregunta;
    private javax.swing.JLabel titulo;
    // End of variables declaration                   
}
